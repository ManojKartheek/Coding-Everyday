# QUESTION:----->>>>>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...|| By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# # Normal Code :--->>>>>
# # This version generates all Fibonacci numbers up to the limit, checks each for evenness, and sums the even ones

# def even_fibonacci_sum(limit):
#     a, b = 1, 2  # Starting values of the Fibonacci sequence (F(1) = 1, F(2) = 2)
#     total = 0  # Initialize total to store the sum of even Fibonacci numbers

#     while a <= limit:  # Continue until the current Fibonacci number exceeds the limit
#         if a % 2 == 0:  # Check if the current Fibonacci number is even
#             total += a  # Add the even Fibonacci number to the total sum
#         a, b = b, a + b  # Update `a` to the next number and `b` to the number after that

#     return total  # Return the total sum of even Fibonacci numbers

# # Example usage
# limit = 4000000  # Set the upper limit for Fibonacci numbers
# result = even_fibonacci_sum(limit)  # Calculate the sum of even Fibonacci numbers up to the limit
# print("The sum of even-valued terms is:", result)  # Output the result

# #-------------------------------------------------------------------------------
# Optimized O(n) Code :--->>>>
# This version skips odd Fibonacci numbers entirely by focusing only on the even ones.

def optimized_even_fibonacci_sum(limit):
    a, b = 2, 8  # Start with the first two even Fibonacci numbers (F(3) = 2, F(6) = 8)
    total = a  # Initialize total with the first even Fibonacci number (2)

    while b <= limit:  # Continue until the current even Fibonacci number exceeds the limit
        total += b  # Add the current even Fibonacci number to the total sum
        # Update `a` and `b` to the next even Fibonacci numbers
        # Use the recurrence relation: F_even(n) = 4 * F_even(n-1) + F_even(n-2)
        a, b = b, 4 * b + a  

    return total  # Return the total sum of even Fibonacci numbers

# Example usage
limit = 4000000  # Set the upper limit for Fibonacci numbers
result = optimized_even_fibonacci_sum(limit)  # Calculate the sum of even Fibonacci numbers up to the limit
print("The sum of even-valued terms is:", result)  # Output the result
